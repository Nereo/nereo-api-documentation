FORMAT: 1A
HOST: https://absences.nereo.com/api

# Nereo API
Nereo API let's you integrate leaves management into your internal processes or tools. [Save time: automate leaves management with Nereo.](https://nereo.com)

> At the moment, only leave requests can be created and edited. The other endpoints are read-only, but they will come later.

**[Subscribe to our newsletter to be kept informed of the evolutions of the API](https://app.mailjet.com/widget/iframe/25Ry/2xV)**

## Authentication
To authenticate through the API, you will need a token that you have to provide in the `Authorization` header of your request, prefixed by the keyword `Token`. For example:

```
Authorization: Token MyRandomToken
```

>    Please note that this token shares the **same rights** as your user account:
>
>    * If you're a **administrator**, you'll be able to view, create and edit every objects ;
>    * If you're a **validator**, you'll be able to view, create and edit your objects and the ones belonging to the persons you validate ;
>    * If you're a **regular user**, you'll only be able to view, create and edit your own objects.

# Group Leave Requests
Leave requests are at the heart of the Nereo system: they represent an absence of an employee.

## Leave Request [/leaverequests/{id}/]

+ Parameters
    + id: 1 (number) - The ID of the Leave Request.

### Retrieve a Leave Request [GET]
Retrieve the Leave Request with the given ID.

+ Response 200 (application/json)
    + Attributes (Leave Request)
    
### Cancel a Leave Request [DELETE]
Delete the Leave Request if it has not been validated yet (`state` is `Re`) **or** create a cancellation Leave Request otherwise.

The cancellation Leave Request behaves then just as a regular Leave Request and has to go through the whole validation process.

+ Response 200 (application/json)
    The Leave Request was not validated yet (`state` is `Re`): it's definitely removed.
    + Attributes (object)
        + detail: `Leave request cancelled` (string) - Status message.

+ Response 201 (application/json)
    The Leave Request was validated (`state` is `V1` or `Va`): a cancellation Leave Request is created.
    + Attributes (object)
        + cancellationLeaveRequestId: 10 (number) - ID of the cancellation Leave Request.
        + detail: `A cancellation request has been created.` (string) - Status message.
        + validated: false (boolean) - Whether or not the cancellation request has automatically been validated. Happens when the cancellation is requested by an administrator or one of the validators of the Employee. 

### Validate a Leave Request [PATCH /leaverequests/{id}/validate/]
Validate the Leave Request. Depending on the current `state` and the validators of the Employee, several cases could happen:
* Employee has only one validator and `state` is `Re` : Leave Request is validated (`state` becomes `Va`).
* Employee has two validators and `state` is `Re` : only the first validator can validate, Leave Request `state` becomes `V1`.
* Employee has two validators and `state` is `V1` : only the second validator can validate, Leave Request is validated (`state` becomes `Va`).

+ Request
    + Attributes (Comment, optional)

+ Response 200 (application/json)
    + Attributes (Leave Request)

+ Response 403 (application/json)
    Happens when the user doesn't have the rights to validate the Leave Request:
    * An Employee can't validate its own request (**even if they are admin**).
    * First validator while `state` is `V1`.
    + Attributes (object)
        + detail: `Nice try but no, you can't validate your own request ðŸ˜œ` (string) - Status message.

### Deny a Leave Request [PATCH /leaverequests/{id}/deny/]
Deny the Leave Request. Depending on the current `state` and the validators of the Employee, several cases could happen:
* Employee has only one validator and `state` is `Re` : Leave Request is denied (`state` becomes `Rf`).
* Employee has two validators and `state` is `Re` : only the first validator can deny, Leave Request is denied (`state` becomes `Rf`).
* Employee has two validators and `state` is `V1` : only the second validator can deny, Leave Request is denied (`state` becomes `Rf`).

+ Request
    + Attributes (Comment, optional)

+ Response 200 (application/json)
    + Attributes (Leave Request)

+ Response 403 (application/json)
    Happens when the user doesn't have the rights to deny the Leave Request:
    * An Employee can't deny its own request (**even if they are admin**).
    * First validator while `state` is `V1`.
    + Attributes (object)
        + detail: `Nice try but no, you can't validate your own request ðŸ˜œ` (string) - Status message.

### Comment a Leave Request [PATCH /leaverequests/{id}/comment/]
Add a comment to the Leave Request.

+ Request
    + Attributes (Comment, required)

+ Response 200 (application/json)
    + Attributes (Leave Request)

+ Response 403 (application/json)
    Happens when the user doesn't have the rights to comment the Leave Request: neither the Employee, one of the validator of the Employee, nor an admin.
    + Attributes (object)
        + detail: `You can't comment this request.` (string) - Status message.

## Quick Leave Request creation [/leaverequests/quick/]
Provide an endpoint to create a Leave Request in one call. Only one Timed Account can be provided. If you wish to create a complex Leave Request with several Timed Accounts, refer to the *Complex Leave Request creation* section.

### Create a Leave Request quickly [POST]

+ Request
    + Attributes (object)
        + user: 1 (number, optional) - ID of the User concerned by the Leave Request, the Employee. *If not provided, the new Leave Request is associated to the current user.*
        + begin_date: `2017-01-01` (string, required) - First date of the absence in format `YYYY-MM-DD`.
        + end_date: `2017-01-07` (string, required) - Last date of the absence in format `YYYY-MM-DD`.
        + `morning_included`: true (boolean, required) - Whether or not the morning of the `begin_date` is included in the absence.
        + `afternoon_included`: true (boolean, required) - Whether or not the afternoon of the `end_date` is included in the absence.
        + timed_account: 1 (number, required) - ID of the Timed Account on which withdraw the absence.
        + Include Comment
        
+ Response 200
    + Attributes (Leave Request)
    
+ Response 400
    Happens when:
    * The user doesn't have the rights to create a Leave Request on behalf of the Employee.
    * The Account associated to the Timed Account provided is `hidden` and the user is not an admin.
    + There are blocking errors preventing this Leave Request to be created (negative balance, consumption constraint not fulfilled, Employee already absent...)
    + Attributes (object)
        + detail: `Impossible request` (string) - Status message.

# Data structures

## Leave Request (object)

+ id: 1 (number)
+ addDate: `2017-06-02T13:37:00Z` (string) - Creation date of the Leave Request.
+ user: 1 (number) - ID of the User concerned by the Leave Request, the Employee.
+ state: Re (enum) - Validation state of the Leave Request.
    + Re (string) - The Leave Request is requested.
    + V1 (string) - The Leave Request is validated by the first validator.
    + Va (string) - The Leave Request is validated.
    + Rf (string) - The Leave Request is refused.
    + Ca (string) - The Leave Request is cancelled.
+ imposed: false (boolean) - Whether or not the Leave Request has been imposed by a validator or an administrator.
+ firstDateKey: `2017-01-01` (string) - First date of the absence in format `YYYY-MM-DD`.
+ lastDateKey: `2017-01-07` (string) - Last date of the absence in format `YYYY-MM-DD`.
+ cancelForLeaveRequest: 10 (number, nullable) - ID of the Leave Request that this Leave Request cancels. `null` if this Leave Request is not a cancellation request.
+ cancellationLeaveRequests: 20, 30, 40 (array[number]) - List of the IDs of the Leave Requests that cancels this Leave request. Empty if this Leave Request has not any cancellation request.
+ leaveRequestDates (array) - Each day concerned by the Leave Request is represented by a Leave Request Date that provides details about the absence on this particular day.
    + (object)
        + dateKey: `2017-01-01` (string) - Date in format `YYYY-MM-DD`.
        + planMark: `all` (enum) - Period of the day on which this Leave Request Date applies.
            + all (string) - All day
            + am (string) - Morning only
            + pm (string) - Afternoon only
        + caw: false (boolean) - Whether or not the date is "considered as work". In French law, this field is here to cope with "jours ouvrables".
        + distribution (array) - Specifies how the absence for this day is distributed among the absences accounts of the Employee.
            + (object)
                + account: 1 (number) - ID of the Timed Account on which this part of the absence is withdrawn.
                + amount: 1 (number) - Value withdrawn from the `account`.
+ comments (array) - Comments posted by the users about this Leave Request.
    + (object)
        + author: 42 (number) - Id of the User author of this comment.
        + addDate: `2017-06-02T13:37:00Z` (string) - Creation date of the comment.
        + text: `Know where your towel is.` (string) - Text of the comment.

## Comment (object)

+ comment: `Know where your towel is.` (string) - Text of the comment.